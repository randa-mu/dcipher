// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.32.0
// 	protoc        v4.25.3
// source: omnievent/events.proto

package omnievent

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Block safety levels
type BlockSafety int32

const (
	BlockSafety_BLOCK_SAFETY_LATEST    BlockSafety = 0
	BlockSafety_BLOCK_SAFETY_FINALIZED BlockSafety = 1
	BlockSafety_BLOCK_SAFETY_SAFE      BlockSafety = 2
)

// Enum value maps for BlockSafety.
var (
	BlockSafety_name = map[int32]string{
		0: "BLOCK_SAFETY_LATEST",
		1: "BLOCK_SAFETY_FINALIZED",
		2: "BLOCK_SAFETY_SAFE",
	}
	BlockSafety_value = map[string]int32{
		"BLOCK_SAFETY_LATEST":    0,
		"BLOCK_SAFETY_FINALIZED": 1,
		"BLOCK_SAFETY_SAFE":      2,
	}
)

func (x BlockSafety) Enum() *BlockSafety {
	p := new(BlockSafety)
	*p = x
	return p
}

func (x BlockSafety) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (BlockSafety) Descriptor() protoreflect.EnumDescriptor {
	return file_omnievent_events_proto_enumTypes[0].Descriptor()
}

func (BlockSafety) Type() protoreflect.EnumType {
	return &file_omnievent_events_proto_enumTypes[0]
}

func (x BlockSafety) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use BlockSafety.Descriptor instead.
func (BlockSafety) EnumDescriptor() ([]byte, []int) {
	return file_omnievent_events_proto_rawDescGZIP(), []int{0}
}

// Request message for registering a new event
type RegisterNewEventRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Chain ID
	ChainId uint64 `protobuf:"varint,1,opt,name=chain_id,json=chainId,proto3" json:"chain_id,omitempty"`
	// Ethereum contract address (20 bytes) - what contract we're watching
	Address []byte `protobuf:"bytes,2,opt,name=address,proto3" json:"address,omitempty"`
	// Event name - what event we're watching for
	EventName string `protobuf:"bytes,3,opt,name=event_name,json=eventName,proto3" json:"event_name,omitempty"`
	// Event fields - the structure of the event
	Fields []*EventField `protobuf:"bytes,4,rep,name=fields,proto3" json:"fields,omitempty"`
	// Block safety level - how we want to handle block finality
	BlockSafety BlockSafety `protobuf:"varint,5,opt,name=block_safety,json=blockSafety,proto3,enum=events.BlockSafety" json:"block_safety,omitempty"`
}

func (x *RegisterNewEventRequest) Reset() {
	*x = RegisterNewEventRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_omnievent_events_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegisterNewEventRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterNewEventRequest) ProtoMessage() {}

func (x *RegisterNewEventRequest) ProtoReflect() protoreflect.Message {
	mi := &file_omnievent_events_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterNewEventRequest.ProtoReflect.Descriptor instead.
func (*RegisterNewEventRequest) Descriptor() ([]byte, []int) {
	return file_omnievent_events_proto_rawDescGZIP(), []int{0}
}

func (x *RegisterNewEventRequest) GetChainId() uint64 {
	if x != nil {
		return x.ChainId
	}
	return 0
}

func (x *RegisterNewEventRequest) GetAddress() []byte {
	if x != nil {
		return x.Address
	}
	return nil
}

func (x *RegisterNewEventRequest) GetEventName() string {
	if x != nil {
		return x.EventName
	}
	return ""
}

func (x *RegisterNewEventRequest) GetFields() []*EventField {
	if x != nil {
		return x.Fields
	}
	return nil
}

func (x *RegisterNewEventRequest) GetBlockSafety() BlockSafety {
	if x != nil {
		return x.BlockSafety
	}
	return BlockSafety_BLOCK_SAFETY_LATEST
}

// Response after registering a new event
type RegisterNewEventResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Uuid uniquely representing the event
	Uuid []byte `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
}

func (x *RegisterNewEventResponse) Reset() {
	*x = RegisterNewEventResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_omnievent_events_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegisterNewEventResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterNewEventResponse) ProtoMessage() {}

func (x *RegisterNewEventResponse) ProtoReflect() protoreflect.Message {
	mi := &file_omnievent_events_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterNewEventResponse.ProtoReflect.Descriptor instead.
func (*RegisterNewEventResponse) Descriptor() ([]byte, []int) {
	return file_omnievent_events_proto_rawDescGZIP(), []int{1}
}

func (x *RegisterNewEventResponse) GetUuid() []byte {
	if x != nil {
		return x.Uuid
	}
	return nil
}

// Request to unregister an event
type UnregisterEventRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Uuid uniquely representing the event
	Uuid []byte `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
}

func (x *UnregisterEventRequest) Reset() {
	*x = UnregisterEventRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_omnievent_events_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnregisterEventRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnregisterEventRequest) ProtoMessage() {}

func (x *UnregisterEventRequest) ProtoReflect() protoreflect.Message {
	mi := &file_omnievent_events_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnregisterEventRequest.ProtoReflect.Descriptor instead.
func (*UnregisterEventRequest) Descriptor() ([]byte, []int) {
	return file_omnievent_events_proto_rawDescGZIP(), []int{2}
}

func (x *UnregisterEventRequest) GetUuid() []byte {
	if x != nil {
		return x.Uuid
	}
	return nil
}

// Request to obtain a list of registered events
type ListRegisteredEventsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ListRegisteredEventsRequest) Reset() {
	*x = ListRegisteredEventsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_omnievent_events_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListRegisteredEventsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListRegisteredEventsRequest) ProtoMessage() {}

func (x *ListRegisteredEventsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_omnievent_events_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListRegisteredEventsRequest.ProtoReflect.Descriptor instead.
func (*ListRegisteredEventsRequest) Descriptor() ([]byte, []int) {
	return file_omnievent_events_proto_rawDescGZIP(), []int{3}
}

// Request to obtain a list of registered events
type ListRegisteredEventsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Events []*RegisteredEvent `protobuf:"bytes,1,rep,name=events,proto3" json:"events,omitempty"`
}

func (x *ListRegisteredEventsResponse) Reset() {
	*x = ListRegisteredEventsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_omnievent_events_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListRegisteredEventsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListRegisteredEventsResponse) ProtoMessage() {}

func (x *ListRegisteredEventsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_omnievent_events_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListRegisteredEventsResponse.ProtoReflect.Descriptor instead.
func (*ListRegisteredEventsResponse) Descriptor() ([]byte, []int) {
	return file_omnievent_events_proto_rawDescGZIP(), []int{4}
}

func (x *ListRegisteredEventsResponse) GetEvents() []*RegisteredEvent {
	if x != nil {
		return x.Events
	}
	return nil
}

type StreamEventsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// List of events to listen to
	EventUuids [][]byte `protobuf:"bytes,1,rep,name=event_uuids,json=eventUuids,proto3" json:"event_uuids,omitempty"`
}

func (x *StreamEventsRequest) Reset() {
	*x = StreamEventsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_omnievent_events_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StreamEventsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamEventsRequest) ProtoMessage() {}

func (x *StreamEventsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_omnievent_events_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamEventsRequest.ProtoReflect.Descriptor instead.
func (*StreamEventsRequest) Descriptor() ([]byte, []int) {
	return file_omnievent_events_proto_rawDescGZIP(), []int{5}
}

func (x *StreamEventsRequest) GetEventUuids() [][]byte {
	if x != nil {
		return x.EventUuids
	}
	return nil
}

// Request for historical events
type GetHistoricalEventsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Uuid uniquely representing the event
	EventUuids [][]byte `protobuf:"bytes,1,rep,name=event_uuids,json=eventUuids,proto3" json:"event_uuids,omitempty"`
	// Filter the event occurrences.
	Filter *EventOccurrenceFilter `protobuf:"bytes,2,opt,name=filter,proto3" json:"filter,omitempty"`
}

func (x *GetHistoricalEventsRequest) Reset() {
	*x = GetHistoricalEventsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_omnievent_events_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetHistoricalEventsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetHistoricalEventsRequest) ProtoMessage() {}

func (x *GetHistoricalEventsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_omnievent_events_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetHistoricalEventsRequest.ProtoReflect.Descriptor instead.
func (*GetHistoricalEventsRequest) Descriptor() ([]byte, []int) {
	return file_omnievent_events_proto_rawDescGZIP(), []int{6}
}

func (x *GetHistoricalEventsRequest) GetEventUuids() [][]byte {
	if x != nil {
		return x.EventUuids
	}
	return nil
}

func (x *GetHistoricalEventsRequest) GetFilter() *EventOccurrenceFilter {
	if x != nil {
		return x.Filter
	}
	return nil
}

// Response with historical events
type GetHistoricalEventsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// List of event occurrences
	Occurrences []*EventOccurrence `protobuf:"bytes,1,rep,name=occurrences,proto3" json:"occurrences,omitempty"`
}

func (x *GetHistoricalEventsResponse) Reset() {
	*x = GetHistoricalEventsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_omnievent_events_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetHistoricalEventsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetHistoricalEventsResponse) ProtoMessage() {}

func (x *GetHistoricalEventsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_omnievent_events_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetHistoricalEventsResponse.ProtoReflect.Descriptor instead.
func (*GetHistoricalEventsResponse) Descriptor() ([]byte, []int) {
	return file_omnievent_events_proto_rawDescGZIP(), []int{7}
}

func (x *GetHistoricalEventsResponse) GetOccurrences() []*EventOccurrence {
	if x != nil {
		return x.Occurrences
	}
	return nil
}

// Request for the last occurrence of historical events
type GetLatestOccurrenceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Uuid uniquely representing the event
	EventUuids [][]byte `protobuf:"bytes,1,rep,name=event_uuids,json=eventUuids,proto3" json:"event_uuids,omitempty"`
	// Filter the event occurrences.
	Filter *EventOccurrenceFilter `protobuf:"bytes,2,opt,name=filter,proto3" json:"filter,omitempty"`
}

func (x *GetLatestOccurrenceRequest) Reset() {
	*x = GetLatestOccurrenceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_omnievent_events_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLatestOccurrenceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLatestOccurrenceRequest) ProtoMessage() {}

func (x *GetLatestOccurrenceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_omnievent_events_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLatestOccurrenceRequest.ProtoReflect.Descriptor instead.
func (*GetLatestOccurrenceRequest) Descriptor() ([]byte, []int) {
	return file_omnievent_events_proto_rawDescGZIP(), []int{8}
}

func (x *GetLatestOccurrenceRequest) GetEventUuids() [][]byte {
	if x != nil {
		return x.EventUuids
	}
	return nil
}

func (x *GetLatestOccurrenceRequest) GetFilter() *EventOccurrenceFilter {
	if x != nil {
		return x.Filter
	}
	return nil
}

// Represents a registered event
type RegisteredEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Uuid uniquely representing the event
	EventUuid []byte `protobuf:"bytes,1,opt,name=event_uuid,json=eventUuid,proto3" json:"event_uuid,omitempty"`
	// Chain ID
	ChainId uint64 `protobuf:"varint,2,opt,name=chain_id,json=chainId,proto3" json:"chain_id,omitempty"`
	// Contract address
	Address []byte `protobuf:"bytes,3,opt,name=address,proto3" json:"address,omitempty"`
	// Event name
	EventName string `protobuf:"bytes,4,opt,name=event_name,json=eventName,proto3" json:"event_name,omitempty"`
	// Event fields
	Fields []*EventField `protobuf:"bytes,5,rep,name=fields,proto3" json:"fields,omitempty"`
	// Block safety level
	BlockSafety BlockSafety `protobuf:"varint,6,opt,name=block_safety,json=blockSafety,proto3,enum=events.BlockSafety" json:"block_safety,omitempty"`
}

func (x *RegisteredEvent) Reset() {
	*x = RegisteredEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_omnievent_events_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegisteredEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisteredEvent) ProtoMessage() {}

func (x *RegisteredEvent) ProtoReflect() protoreflect.Message {
	mi := &file_omnievent_events_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisteredEvent.ProtoReflect.Descriptor instead.
func (*RegisteredEvent) Descriptor() ([]byte, []int) {
	return file_omnievent_events_proto_rawDescGZIP(), []int{9}
}

func (x *RegisteredEvent) GetEventUuid() []byte {
	if x != nil {
		return x.EventUuid
	}
	return nil
}

func (x *RegisteredEvent) GetChainId() uint64 {
	if x != nil {
		return x.ChainId
	}
	return 0
}

func (x *RegisteredEvent) GetAddress() []byte {
	if x != nil {
		return x.Address
	}
	return nil
}

func (x *RegisteredEvent) GetEventName() string {
	if x != nil {
		return x.EventName
	}
	return ""
}

func (x *RegisteredEvent) GetFields() []*EventField {
	if x != nil {
		return x.Fields
	}
	return nil
}

func (x *RegisteredEvent) GetBlockSafety() BlockSafety {
	if x != nil {
		return x.BlockSafety
	}
	return BlockSafety_BLOCK_SAFETY_LATEST
}

type EventOccurrence struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Uuid uniquely representing the registered event
	EventUuid []byte `protobuf:"bytes,1,opt,name=event_uuid,json=eventUuid,proto3" json:"event_uuid,omitempty"`
	// Block information
	BlockInfo *BlockInfo `protobuf:"bytes,2,opt,name=block_info,json=blockInfo,proto3" json:"block_info,omitempty"`
	// Raw log data (for advanced use cases)
	RawLogData []byte `protobuf:"bytes,3,opt,name=raw_log_data,json=rawLogData,proto3,oneof" json:"raw_log_data,omitempty"`
	// Event data (decoded parameters)
	EventData []*EventData `protobuf:"bytes,4,rep,name=event_data,json=eventData,proto3" json:"event_data,omitempty"`
	// Chain id
	ChainId uint64 `protobuf:"varint,5,opt,name=chain_id,json=chainId,proto3" json:"chain_id,omitempty"`
	// Address of the contract
	Address []byte `protobuf:"bytes,6,opt,name=address,proto3" json:"address,omitempty"`
}

func (x *EventOccurrence) Reset() {
	*x = EventOccurrence{}
	if protoimpl.UnsafeEnabled {
		mi := &file_omnievent_events_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventOccurrence) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventOccurrence) ProtoMessage() {}

func (x *EventOccurrence) ProtoReflect() protoreflect.Message {
	mi := &file_omnievent_events_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventOccurrence.ProtoReflect.Descriptor instead.
func (*EventOccurrence) Descriptor() ([]byte, []int) {
	return file_omnievent_events_proto_rawDescGZIP(), []int{10}
}

func (x *EventOccurrence) GetEventUuid() []byte {
	if x != nil {
		return x.EventUuid
	}
	return nil
}

func (x *EventOccurrence) GetBlockInfo() *BlockInfo {
	if x != nil {
		return x.BlockInfo
	}
	return nil
}

func (x *EventOccurrence) GetRawLogData() []byte {
	if x != nil {
		return x.RawLogData
	}
	return nil
}

func (x *EventOccurrence) GetEventData() []*EventData {
	if x != nil {
		return x.EventData
	}
	return nil
}

func (x *EventOccurrence) GetChainId() uint64 {
	if x != nil {
		return x.ChainId
	}
	return 0
}

func (x *EventOccurrence) GetAddress() []byte {
	if x != nil {
		return x.Address
	}
	return nil
}

// Block information
type BlockInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Block number
	BlockNumber uint64 `protobuf:"varint,1,opt,name=block_number,json=blockNumber,proto3" json:"block_number,omitempty"`
	// Block hash
	BlockHash []byte `protobuf:"bytes,2,opt,name=block_hash,json=blockHash,proto3" json:"block_hash,omitempty"`
	// Block timestamp
	Timestamp *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
}

func (x *BlockInfo) Reset() {
	*x = BlockInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_omnievent_events_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BlockInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BlockInfo) ProtoMessage() {}

func (x *BlockInfo) ProtoReflect() protoreflect.Message {
	mi := &file_omnievent_events_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BlockInfo.ProtoReflect.Descriptor instead.
func (*BlockInfo) Descriptor() ([]byte, []int) {
	return file_omnievent_events_proto_rawDescGZIP(), []int{11}
}

func (x *BlockInfo) GetBlockNumber() uint64 {
	if x != nil {
		return x.BlockNumber
	}
	return 0
}

func (x *BlockInfo) GetBlockHash() []byte {
	if x != nil {
		return x.BlockHash
	}
	return nil
}

func (x *BlockInfo) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

// Represents one of the field of a solidity event
type EventField struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Solidity type as string (e.g., "address", "uint256", "bytes32", "uint256[]")
	SolType string `protobuf:"bytes,1,opt,name=sol_type,json=solType,proto3" json:"sol_type,omitempty"`
	// Whether the field is indexed
	Indexed bool `protobuf:"varint,2,opt,name=indexed,proto3" json:"indexed,omitempty"`
}

func (x *EventField) Reset() {
	*x = EventField{}
	if protoimpl.UnsafeEnabled {
		mi := &file_omnievent_events_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventField) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventField) ProtoMessage() {}

func (x *EventField) ProtoReflect() protoreflect.Message {
	mi := &file_omnievent_events_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventField.ProtoReflect.Descriptor instead.
func (*EventField) Descriptor() ([]byte, []int) {
	return file_omnievent_events_proto_rawDescGZIP(), []int{12}
}

func (x *EventField) GetSolType() string {
	if x != nil {
		return x.SolType
	}
	return ""
}

func (x *EventField) GetIndexed() bool {
	if x != nil {
		return x.Indexed
	}
	return false
}

// Represents decoded event data
type EventData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Solidity type as string (e.g., "address", "uint256", "bytes32", "uint256[]")
	SolType string `protobuf:"bytes,1,opt,name=sol_type,json=solType,proto3" json:"sol_type,omitempty"`
	// Whether this parameter was indexed
	Indexed bool `protobuf:"varint,2,opt,name=indexed,proto3" json:"indexed,omitempty"`
	// The actual value (encoded as appropriate type)
	//
	// Types that are assignable to Value:
	//
	//	*EventData_StringValue
	//	*EventData_IntHexValue
	//	*EventData_BoolValue
	//	*EventData_BytesValue
	//	*EventData_AddressValue
	//	*EventData_AbiBytes
	Value isEventData_Value `protobuf_oneof:"value"`
}

func (x *EventData) Reset() {
	*x = EventData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_omnievent_events_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventData) ProtoMessage() {}

func (x *EventData) ProtoReflect() protoreflect.Message {
	mi := &file_omnievent_events_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventData.ProtoReflect.Descriptor instead.
func (*EventData) Descriptor() ([]byte, []int) {
	return file_omnievent_events_proto_rawDescGZIP(), []int{13}
}

func (x *EventData) GetSolType() string {
	if x != nil {
		return x.SolType
	}
	return ""
}

func (x *EventData) GetIndexed() bool {
	if x != nil {
		return x.Indexed
	}
	return false
}

func (m *EventData) GetValue() isEventData_Value {
	if m != nil {
		return m.Value
	}
	return nil
}

func (x *EventData) GetStringValue() string {
	if x, ok := x.GetValue().(*EventData_StringValue); ok {
		return x.StringValue
	}
	return ""
}

func (x *EventData) GetIntHexValue() string {
	if x, ok := x.GetValue().(*EventData_IntHexValue); ok {
		return x.IntHexValue
	}
	return ""
}

func (x *EventData) GetBoolValue() bool {
	if x, ok := x.GetValue().(*EventData_BoolValue); ok {
		return x.BoolValue
	}
	return false
}

func (x *EventData) GetBytesValue() []byte {
	if x, ok := x.GetValue().(*EventData_BytesValue); ok {
		return x.BytesValue
	}
	return nil
}

func (x *EventData) GetAddressValue() []byte {
	if x, ok := x.GetValue().(*EventData_AddressValue); ok {
		return x.AddressValue
	}
	return nil
}

func (x *EventData) GetAbiBytes() []byte {
	if x, ok := x.GetValue().(*EventData_AbiBytes); ok {
		return x.AbiBytes
	}
	return nil
}

type isEventData_Value interface {
	isEventData_Value()
}

type EventData_StringValue struct {
	StringValue string `protobuf:"bytes,10,opt,name=string_value,json=stringValue,proto3,oneof"`
}

type EventData_IntHexValue struct {
	IntHexValue string `protobuf:"bytes,11,opt,name=int_hex_value,json=intHexValue,proto3,oneof"`
}

type EventData_BoolValue struct {
	BoolValue bool `protobuf:"varint,12,opt,name=bool_value,json=boolValue,proto3,oneof"`
}

type EventData_BytesValue struct {
	BytesValue []byte `protobuf:"bytes,13,opt,name=bytes_value,json=bytesValue,proto3,oneof"`
}

type EventData_AddressValue struct {
	AddressValue []byte `protobuf:"bytes,14,opt,name=address_value,json=addressValue,proto3,oneof"`
}

type EventData_AbiBytes struct {
	// For other types
	AbiBytes []byte `protobuf:"bytes,19,opt,name=abi_bytes,json=abiBytes,proto3,oneof"`
}

func (*EventData_StringValue) isEventData_Value() {}

func (*EventData_IntHexValue) isEventData_Value() {}

func (*EventData_BoolValue) isEventData_Value() {}

func (*EventData_BytesValue) isEventData_Value() {}

func (*EventData_AddressValue) isEventData_Value() {}

func (*EventData_AbiBytes) isEventData_Value() {}

// Filter for an event occurrence that requires all conditions to be met
type EventOccurrenceFilter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BlockFilter *BlockFilter            `protobuf:"bytes,1,opt,name=block_filter,json=blockFilter,proto3,oneof" json:"block_filter,omitempty"`
	DataFilters []*OccurrenceDataFilter `protobuf:"bytes,2,rep,name=data_filters,json=dataFilters,proto3" json:"data_filters,omitempty"`
}

func (x *EventOccurrenceFilter) Reset() {
	*x = EventOccurrenceFilter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_omnievent_events_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventOccurrenceFilter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventOccurrenceFilter) ProtoMessage() {}

func (x *EventOccurrenceFilter) ProtoReflect() protoreflect.Message {
	mi := &file_omnievent_events_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventOccurrenceFilter.ProtoReflect.Descriptor instead.
func (*EventOccurrenceFilter) Descriptor() ([]byte, []int) {
	return file_omnievent_events_proto_rawDescGZIP(), []int{14}
}

func (x *EventOccurrenceFilter) GetBlockFilter() *BlockFilter {
	if x != nil {
		return x.BlockFilter
	}
	return nil
}

func (x *EventOccurrenceFilter) GetDataFilters() []*OccurrenceDataFilter {
	if x != nil {
		return x.DataFilters
	}
	return nil
}

// A filter for blocks
type BlockFilter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Start block (inclusive)
	FromBlock *uint64 `protobuf:"varint,1,opt,name=from_block,json=fromBlock,proto3,oneof" json:"from_block,omitempty"`
	// End block (exclusive)
	ToBlock *uint64 `protobuf:"varint,2,opt,name=to_block,json=toBlock,proto3,oneof" json:"to_block,omitempty"`
}

func (x *BlockFilter) Reset() {
	*x = BlockFilter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_omnievent_events_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BlockFilter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BlockFilter) ProtoMessage() {}

func (x *BlockFilter) ProtoReflect() protoreflect.Message {
	mi := &file_omnievent_events_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BlockFilter.ProtoReflect.Descriptor instead.
func (*BlockFilter) Descriptor() ([]byte, []int) {
	return file_omnievent_events_proto_rawDescGZIP(), []int{15}
}

func (x *BlockFilter) GetFromBlock() uint64 {
	if x != nil && x.FromBlock != nil {
		return *x.FromBlock
	}
	return 0
}

func (x *BlockFilter) GetToBlock() uint64 {
	if x != nil && x.ToBlock != nil {
		return *x.ToBlock
	}
	return 0
}

// Filters the data from an event occurrence
type OccurrenceDataFilter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DataIndex uint32 `protobuf:"varint,1,opt,name=data_index,json=dataIndex,proto3" json:"data_index,omitempty"`
	// A filter depending on the data type.
	//
	// Types that are assignable to Filter:
	//
	//	*OccurrenceDataFilter_String_
	//	*OccurrenceDataFilter_Uint
	//	*OccurrenceDataFilter_Int
	//	*OccurrenceDataFilter_Bool
	//	*OccurrenceDataFilter_Bytes
	//	*OccurrenceDataFilter_Address
	//	*OccurrenceDataFilter_AbiBytes
	Filter isOccurrenceDataFilter_Filter `protobuf_oneof:"filter"`
}

func (x *OccurrenceDataFilter) Reset() {
	*x = OccurrenceDataFilter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_omnievent_events_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OccurrenceDataFilter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OccurrenceDataFilter) ProtoMessage() {}

func (x *OccurrenceDataFilter) ProtoReflect() protoreflect.Message {
	mi := &file_omnievent_events_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OccurrenceDataFilter.ProtoReflect.Descriptor instead.
func (*OccurrenceDataFilter) Descriptor() ([]byte, []int) {
	return file_omnievent_events_proto_rawDescGZIP(), []int{16}
}

func (x *OccurrenceDataFilter) GetDataIndex() uint32 {
	if x != nil {
		return x.DataIndex
	}
	return 0
}

func (m *OccurrenceDataFilter) GetFilter() isOccurrenceDataFilter_Filter {
	if m != nil {
		return m.Filter
	}
	return nil
}

func (x *OccurrenceDataFilter) GetString_() *StringDataFilter {
	if x, ok := x.GetFilter().(*OccurrenceDataFilter_String_); ok {
		return x.String_
	}
	return nil
}

func (x *OccurrenceDataFilter) GetUint() *UintDataFilter {
	if x, ok := x.GetFilter().(*OccurrenceDataFilter_Uint); ok {
		return x.Uint
	}
	return nil
}

func (x *OccurrenceDataFilter) GetInt() *IntDataFilter {
	if x, ok := x.GetFilter().(*OccurrenceDataFilter_Int); ok {
		return x.Int
	}
	return nil
}

func (x *OccurrenceDataFilter) GetBool() *BoolDataFilter {
	if x, ok := x.GetFilter().(*OccurrenceDataFilter_Bool); ok {
		return x.Bool
	}
	return nil
}

func (x *OccurrenceDataFilter) GetBytes() *BytesDataFilter {
	if x, ok := x.GetFilter().(*OccurrenceDataFilter_Bytes); ok {
		return x.Bytes
	}
	return nil
}

func (x *OccurrenceDataFilter) GetAddress() *AddressDataFilter {
	if x, ok := x.GetFilter().(*OccurrenceDataFilter_Address); ok {
		return x.Address
	}
	return nil
}

func (x *OccurrenceDataFilter) GetAbiBytes() *BytesDataFilter {
	if x, ok := x.GetFilter().(*OccurrenceDataFilter_AbiBytes); ok {
		return x.AbiBytes
	}
	return nil
}

type isOccurrenceDataFilter_Filter interface {
	isOccurrenceDataFilter_Filter()
}

type OccurrenceDataFilter_String_ struct {
	String_ *StringDataFilter `protobuf:"bytes,10,opt,name=string,proto3,oneof"`
}

type OccurrenceDataFilter_Uint struct {
	Uint *UintDataFilter `protobuf:"bytes,11,opt,name=uint,proto3,oneof"`
}

type OccurrenceDataFilter_Int struct {
	Int *IntDataFilter `protobuf:"bytes,12,opt,name=int,proto3,oneof"`
}

type OccurrenceDataFilter_Bool struct {
	Bool *BoolDataFilter `protobuf:"bytes,13,opt,name=bool,proto3,oneof"`
}

type OccurrenceDataFilter_Bytes struct {
	Bytes *BytesDataFilter `protobuf:"bytes,14,opt,name=bytes,proto3,oneof"`
}

type OccurrenceDataFilter_Address struct {
	Address *AddressDataFilter `protobuf:"bytes,15,opt,name=address,proto3,oneof"`
}

type OccurrenceDataFilter_AbiBytes struct {
	// For other types
	AbiBytes *BytesDataFilter `protobuf:"bytes,19,opt,name=abi_bytes,json=abiBytes,proto3,oneof"`
}

func (*OccurrenceDataFilter_String_) isOccurrenceDataFilter_Filter() {}

func (*OccurrenceDataFilter_Uint) isOccurrenceDataFilter_Filter() {}

func (*OccurrenceDataFilter_Int) isOccurrenceDataFilter_Filter() {}

func (*OccurrenceDataFilter_Bool) isOccurrenceDataFilter_Filter() {}

func (*OccurrenceDataFilter_Bytes) isOccurrenceDataFilter_Filter() {}

func (*OccurrenceDataFilter_Address) isOccurrenceDataFilter_Filter() {}

func (*OccurrenceDataFilter_AbiBytes) isOccurrenceDataFilter_Filter() {}

type StringDataFilter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ExactValues []string `protobuf:"bytes,1,rep,name=exact_values,json=exactValues,proto3" json:"exact_values,omitempty"`
}

func (x *StringDataFilter) Reset() {
	*x = StringDataFilter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_omnievent_events_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StringDataFilter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StringDataFilter) ProtoMessage() {}

func (x *StringDataFilter) ProtoReflect() protoreflect.Message {
	mi := &file_omnievent_events_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StringDataFilter.ProtoReflect.Descriptor instead.
func (*StringDataFilter) Descriptor() ([]byte, []int) {
	return file_omnievent_events_proto_rawDescGZIP(), []int{17}
}

func (x *StringDataFilter) GetExactValues() []string {
	if x != nil {
		return x.ExactValues
	}
	return nil
}

type IntDataFilter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Hex-encoded 256 bits signed integers
	ExactHexValues []string `protobuf:"bytes,1,rep,name=exact_hex_values,json=exactHexValues,proto3" json:"exact_hex_values,omitempty"`
}

func (x *IntDataFilter) Reset() {
	*x = IntDataFilter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_omnievent_events_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IntDataFilter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IntDataFilter) ProtoMessage() {}

func (x *IntDataFilter) ProtoReflect() protoreflect.Message {
	mi := &file_omnievent_events_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IntDataFilter.ProtoReflect.Descriptor instead.
func (*IntDataFilter) Descriptor() ([]byte, []int) {
	return file_omnievent_events_proto_rawDescGZIP(), []int{18}
}

func (x *IntDataFilter) GetExactHexValues() []string {
	if x != nil {
		return x.ExactHexValues
	}
	return nil
}

type UintDataFilter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Hex-encoded 256 bits unsigned integers
	ExactHexValues []string `protobuf:"bytes,1,rep,name=exact_hex_values,json=exactHexValues,proto3" json:"exact_hex_values,omitempty"`
}

func (x *UintDataFilter) Reset() {
	*x = UintDataFilter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_omnievent_events_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UintDataFilter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UintDataFilter) ProtoMessage() {}

func (x *UintDataFilter) ProtoReflect() protoreflect.Message {
	mi := &file_omnievent_events_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UintDataFilter.ProtoReflect.Descriptor instead.
func (*UintDataFilter) Descriptor() ([]byte, []int) {
	return file_omnievent_events_proto_rawDescGZIP(), []int{19}
}

func (x *UintDataFilter) GetExactHexValues() []string {
	if x != nil {
		return x.ExactHexValues
	}
	return nil
}

type BoolDataFilter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ExactValue bool `protobuf:"varint,1,opt,name=exact_value,json=exactValue,proto3" json:"exact_value,omitempty"`
}

func (x *BoolDataFilter) Reset() {
	*x = BoolDataFilter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_omnievent_events_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BoolDataFilter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BoolDataFilter) ProtoMessage() {}

func (x *BoolDataFilter) ProtoReflect() protoreflect.Message {
	mi := &file_omnievent_events_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BoolDataFilter.ProtoReflect.Descriptor instead.
func (*BoolDataFilter) Descriptor() ([]byte, []int) {
	return file_omnievent_events_proto_rawDescGZIP(), []int{20}
}

func (x *BoolDataFilter) GetExactValue() bool {
	if x != nil {
		return x.ExactValue
	}
	return false
}

type BytesDataFilter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ExactValues [][]byte `protobuf:"bytes,1,rep,name=exact_values,json=exactValues,proto3" json:"exact_values,omitempty"`
}

func (x *BytesDataFilter) Reset() {
	*x = BytesDataFilter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_omnievent_events_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BytesDataFilter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BytesDataFilter) ProtoMessage() {}

func (x *BytesDataFilter) ProtoReflect() protoreflect.Message {
	mi := &file_omnievent_events_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BytesDataFilter.ProtoReflect.Descriptor instead.
func (*BytesDataFilter) Descriptor() ([]byte, []int) {
	return file_omnievent_events_proto_rawDescGZIP(), []int{21}
}

func (x *BytesDataFilter) GetExactValues() [][]byte {
	if x != nil {
		return x.ExactValues
	}
	return nil
}

type AddressDataFilter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ExactValues [][]byte `protobuf:"bytes,1,rep,name=exact_values,json=exactValues,proto3" json:"exact_values,omitempty"`
}

func (x *AddressDataFilter) Reset() {
	*x = AddressDataFilter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_omnievent_events_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddressDataFilter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddressDataFilter) ProtoMessage() {}

func (x *AddressDataFilter) ProtoReflect() protoreflect.Message {
	mi := &file_omnievent_events_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddressDataFilter.ProtoReflect.Descriptor instead.
func (*AddressDataFilter) Descriptor() ([]byte, []int) {
	return file_omnievent_events_proto_rawDescGZIP(), []int{22}
}

func (x *AddressDataFilter) GetExactValues() [][]byte {
	if x != nil {
		return x.ExactValues
	}
	return nil
}

var File_omnievent_events_proto protoreflect.FileDescriptor

var file_omnievent_events_proto_rawDesc = []byte{
	0x0a, 0x16, 0x6f, 0x6d, 0x6e, 0x69, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x2f, 0x65, 0x76, 0x65, 0x6e,
	0x74, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x06, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73,
	0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xd1,
	0x01, 0x0a, 0x17, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x4e, 0x65, 0x77, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x63, 0x68,
	0x61, 0x69, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x63, 0x68,
	0x61, 0x69, 0x6e, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12,
	0x1d, 0x0a, 0x0a, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2a,
	0x0a, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12,
	0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x46, 0x69, 0x65,
	0x6c, 0x64, 0x52, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x12, 0x36, 0x0a, 0x0c, 0x62, 0x6c,
	0x6f, 0x63, 0x6b, 0x5f, 0x73, 0x61, 0x66, 0x65, 0x74, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x13, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x53,
	0x61, 0x66, 0x65, 0x74, 0x79, 0x52, 0x0b, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x53, 0x61, 0x66, 0x65,
	0x74, 0x79, 0x22, 0x2e, 0x0a, 0x18, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x4e, 0x65,
	0x77, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x75, 0x75,
	0x69, 0x64, 0x22, 0x2c, 0x0a, 0x16, 0x55, 0x6e, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04,
	0x75, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x75, 0x75, 0x69, 0x64,
	0x22, 0x1d, 0x0a, 0x1b, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72,
	0x65, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22,
	0x4f, 0x0a, 0x1c, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x65,
	0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x2f, 0x0a, 0x06, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x17, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65,
	0x72, 0x65, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x06, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73,
	0x22, 0x36, 0x0a, 0x13, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x65, 0x76, 0x65, 0x6e, 0x74,
	0x5f, 0x75, 0x75, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0c, 0x52, 0x0a, 0x65, 0x76,
	0x65, 0x6e, 0x74, 0x55, 0x75, 0x69, 0x64, 0x73, 0x22, 0x74, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x48,
	0x69, 0x73, 0x74, 0x6f, 0x72, 0x69, 0x63, 0x61, 0x6c, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f,
	0x75, 0x75, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0c, 0x52, 0x0a, 0x65, 0x76, 0x65,
	0x6e, 0x74, 0x55, 0x75, 0x69, 0x64, 0x73, 0x12, 0x35, 0x0a, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65,
	0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73,
	0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x4f, 0x63, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x65,
	0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x22, 0x58,
	0x0a, 0x1b, 0x47, 0x65, 0x74, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x69, 0x63, 0x61, 0x6c, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x39, 0x0a,
	0x0b, 0x6f, 0x63, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x17, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x4f, 0x63, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x52, 0x0b, 0x6f, 0x63, 0x63,
	0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x73, 0x22, 0x74, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x4c,
	0x61, 0x74, 0x65, 0x73, 0x74, 0x4f, 0x63, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f,
	0x75, 0x75, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0c, 0x52, 0x0a, 0x65, 0x76, 0x65,
	0x6e, 0x74, 0x55, 0x75, 0x69, 0x64, 0x73, 0x12, 0x35, 0x0a, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65,
	0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73,
	0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x4f, 0x63, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x65,
	0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x22, 0xe8,
	0x01, 0x0a, 0x0f, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x65, 0x64, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x75, 0x75, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x55, 0x75, 0x69,
	0x64, 0x12, 0x19, 0x0a, 0x08, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x07, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07,
	0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x61,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x65, 0x76, 0x65, 0x6e,
	0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2a, 0x0a, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x18,
	0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x52, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64,
	0x73, 0x12, 0x36, 0x0a, 0x0c, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x73, 0x61, 0x66, 0x65, 0x74,
	0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x13, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73,
	0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x53, 0x61, 0x66, 0x65, 0x74, 0x79, 0x52, 0x0b, 0x62, 0x6c,
	0x6f, 0x63, 0x6b, 0x53, 0x61, 0x66, 0x65, 0x74, 0x79, 0x22, 0x81, 0x02, 0x0a, 0x0f, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x4f, 0x63, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x1d, 0x0a,
	0x0a, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x75, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x09, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x55, 0x75, 0x69, 0x64, 0x12, 0x30, 0x0a, 0x0a,
	0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x11, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x09, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x25,
	0x0a, 0x0c, 0x72, 0x61, 0x77, 0x5f, 0x6c, 0x6f, 0x67, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0c, 0x48, 0x00, 0x52, 0x0a, 0x72, 0x61, 0x77, 0x4c, 0x6f, 0x67, 0x44, 0x61,
	0x74, 0x61, 0x88, 0x01, 0x01, 0x12, 0x30, 0x0a, 0x0a, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x64,
	0x61, 0x74, 0x61, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x65, 0x76, 0x65, 0x6e,
	0x74, 0x73, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x09, 0x65, 0x76,
	0x65, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x61, 0x12, 0x19, 0x0a, 0x08, 0x63, 0x68, 0x61, 0x69, 0x6e,
	0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x63, 0x68, 0x61, 0x69, 0x6e,
	0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x42, 0x0f, 0x0a, 0x0d,
	0x5f, 0x72, 0x61, 0x77, 0x5f, 0x6c, 0x6f, 0x67, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x22, 0x87, 0x01,
	0x0a, 0x09, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x21, 0x0a, 0x0c, 0x62,
	0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x0b, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x1d,
	0x0a, 0x0a, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x09, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x61, 0x73, 0x68, 0x12, 0x38, 0x0a,
	0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x74, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x22, 0x41, 0x0a, 0x0a, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x46, 0x69, 0x65, 0x6c, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x6f, 0x6c, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x6f, 0x6c, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x07, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x65, 0x64, 0x22, 0x9e, 0x02, 0x0a, 0x09, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x61, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x6f, 0x6c, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x6f, 0x6c, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x65, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x65, 0x64, 0x12, 0x23, 0x0a,
	0x0c, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x0b, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x69, 0x6e, 0x74, 0x5f, 0x68, 0x65, 0x78, 0x5f, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x0b, 0x69, 0x6e, 0x74,
	0x48, 0x65, 0x78, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x1f, 0x0a, 0x0a, 0x62, 0x6f, 0x6f, 0x6c,
	0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x08, 0x48, 0x00, 0x52, 0x09,
	0x62, 0x6f, 0x6f, 0x6c, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x21, 0x0a, 0x0b, 0x62, 0x79, 0x74,
	0x65, 0x73, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0c, 0x48, 0x00,
	0x52, 0x0a, 0x62, 0x79, 0x74, 0x65, 0x73, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x25, 0x0a, 0x0d,
	0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x0e, 0x20,
	0x01, 0x28, 0x0c, 0x48, 0x00, 0x52, 0x0c, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x12, 0x1d, 0x0a, 0x09, 0x61, 0x62, 0x69, 0x5f, 0x62, 0x79, 0x74, 0x65, 0x73,
	0x18, 0x13, 0x20, 0x01, 0x28, 0x0c, 0x48, 0x00, 0x52, 0x08, 0x61, 0x62, 0x69, 0x42, 0x79, 0x74,
	0x65, 0x73, 0x42, 0x07, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0xa6, 0x01, 0x0a, 0x15,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x4f, 0x63, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x46,
	0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x3b, 0x0a, 0x0c, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x66,
	0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x65, 0x76,
	0x65, 0x6e, 0x74, 0x73, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72,
	0x48, 0x00, 0x52, 0x0b, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x88,
	0x01, 0x01, 0x12, 0x3f, 0x0a, 0x0c, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x66, 0x69, 0x6c, 0x74, 0x65,
	0x72, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74,
	0x73, 0x2e, 0x4f, 0x63, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x44, 0x61, 0x74, 0x61,
	0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x0b, 0x64, 0x61, 0x74, 0x61, 0x46, 0x69, 0x6c, 0x74,
	0x65, 0x72, 0x73, 0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x66, 0x69,
	0x6c, 0x74, 0x65, 0x72, 0x22, 0x6d, 0x0a, 0x0b, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x46, 0x69, 0x6c,
	0x74, 0x65, 0x72, 0x12, 0x22, 0x0a, 0x0a, 0x66, 0x72, 0x6f, 0x6d, 0x5f, 0x62, 0x6c, 0x6f, 0x63,
	0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x48, 0x00, 0x52, 0x09, 0x66, 0x72, 0x6f, 0x6d, 0x42,
	0x6c, 0x6f, 0x63, 0x6b, 0x88, 0x01, 0x01, 0x12, 0x1e, 0x0a, 0x08, 0x74, 0x6f, 0x5f, 0x62, 0x6c,
	0x6f, 0x63, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x48, 0x01, 0x52, 0x07, 0x74, 0x6f, 0x42,
	0x6c, 0x6f, 0x63, 0x6b, 0x88, 0x01, 0x01, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x66, 0x72, 0x6f, 0x6d,
	0x5f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x74, 0x6f, 0x5f, 0x62, 0x6c,
	0x6f, 0x63, 0x6b, 0x22, 0x9a, 0x03, 0x0a, 0x14, 0x4f, 0x63, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e,
	0x63, 0x65, 0x44, 0x61, 0x74, 0x61, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x1d, 0x0a, 0x0a,
	0x64, 0x61, 0x74, 0x61, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x09, 0x64, 0x61, 0x74, 0x61, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x32, 0x0a, 0x06, 0x73,
	0x74, 0x72, 0x69, 0x6e, 0x67, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x65, 0x76,
	0x65, 0x6e, 0x74, 0x73, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x44, 0x61, 0x74, 0x61, 0x46,
	0x69, 0x6c, 0x74, 0x65, 0x72, 0x48, 0x00, 0x52, 0x06, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x12,
	0x2c, 0x0a, 0x04, 0x75, 0x69, 0x6e, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e,
	0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x55, 0x69, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x61, 0x46,
	0x69, 0x6c, 0x74, 0x65, 0x72, 0x48, 0x00, 0x52, 0x04, 0x75, 0x69, 0x6e, 0x74, 0x12, 0x29, 0x0a,
	0x03, 0x69, 0x6e, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x65, 0x76, 0x65,
	0x6e, 0x74, 0x73, 0x2e, 0x49, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x61, 0x46, 0x69, 0x6c, 0x74, 0x65,
	0x72, 0x48, 0x00, 0x52, 0x03, 0x69, 0x6e, 0x74, 0x12, 0x2c, 0x0a, 0x04, 0x62, 0x6f, 0x6f, 0x6c,
	0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x2e,
	0x42, 0x6f, 0x6f, 0x6c, 0x44, 0x61, 0x74, 0x61, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x48, 0x00,
	0x52, 0x04, 0x62, 0x6f, 0x6f, 0x6c, 0x12, 0x2f, 0x0a, 0x05, 0x62, 0x79, 0x74, 0x65, 0x73, 0x18,
	0x0e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x42,
	0x79, 0x74, 0x65, 0x73, 0x44, 0x61, 0x74, 0x61, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x48, 0x00,
	0x52, 0x05, 0x62, 0x79, 0x74, 0x65, 0x73, 0x12, 0x35, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74,
	0x73, 0x2e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x44, 0x61, 0x74, 0x61, 0x46, 0x69, 0x6c,
	0x74, 0x65, 0x72, 0x48, 0x00, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x36,
	0x0a, 0x09, 0x61, 0x62, 0x69, 0x5f, 0x62, 0x79, 0x74, 0x65, 0x73, 0x18, 0x13, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x17, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x42, 0x79, 0x74, 0x65, 0x73,
	0x44, 0x61, 0x74, 0x61, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x48, 0x00, 0x52, 0x08, 0x61, 0x62,
	0x69, 0x42, 0x79, 0x74, 0x65, 0x73, 0x42, 0x08, 0x0a, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72,
	0x22, 0x35, 0x0a, 0x10, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x44, 0x61, 0x74, 0x61, 0x46, 0x69,
	0x6c, 0x74, 0x65, 0x72, 0x12, 0x21, 0x0a, 0x0c, 0x65, 0x78, 0x61, 0x63, 0x74, 0x5f, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0b, 0x65, 0x78, 0x61, 0x63,
	0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x22, 0x39, 0x0a, 0x0d, 0x49, 0x6e, 0x74, 0x44, 0x61,
	0x74, 0x61, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x28, 0x0a, 0x10, 0x65, 0x78, 0x61, 0x63,
	0x74, 0x5f, 0x68, 0x65, 0x78, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x0e, 0x65, 0x78, 0x61, 0x63, 0x74, 0x48, 0x65, 0x78, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x73, 0x22, 0x3a, 0x0a, 0x0e, 0x55, 0x69, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x61, 0x46, 0x69,
	0x6c, 0x74, 0x65, 0x72, 0x12, 0x28, 0x0a, 0x10, 0x65, 0x78, 0x61, 0x63, 0x74, 0x5f, 0x68, 0x65,
	0x78, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0e,
	0x65, 0x78, 0x61, 0x63, 0x74, 0x48, 0x65, 0x78, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x22, 0x31,
	0x0a, 0x0e, 0x42, 0x6f, 0x6f, 0x6c, 0x44, 0x61, 0x74, 0x61, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72,
	0x12, 0x1f, 0x0a, 0x0b, 0x65, 0x78, 0x61, 0x63, 0x74, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x65, 0x78, 0x61, 0x63, 0x74, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x22, 0x34, 0x0a, 0x0f, 0x42, 0x79, 0x74, 0x65, 0x73, 0x44, 0x61, 0x74, 0x61, 0x46, 0x69,
	0x6c, 0x74, 0x65, 0x72, 0x12, 0x21, 0x0a, 0x0c, 0x65, 0x78, 0x61, 0x63, 0x74, 0x5f, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0c, 0x52, 0x0b, 0x65, 0x78, 0x61, 0x63,
	0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x22, 0x36, 0x0a, 0x11, 0x41, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x44, 0x61, 0x74, 0x61, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x21, 0x0a, 0x0c,
	0x65, 0x78, 0x61, 0x63, 0x74, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0c, 0x52, 0x0b, 0x65, 0x78, 0x61, 0x63, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x2a,
	0x59, 0x0a, 0x0b, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x53, 0x61, 0x66, 0x65, 0x74, 0x79, 0x12, 0x17,
	0x0a, 0x13, 0x42, 0x4c, 0x4f, 0x43, 0x4b, 0x5f, 0x53, 0x41, 0x46, 0x45, 0x54, 0x59, 0x5f, 0x4c,
	0x41, 0x54, 0x45, 0x53, 0x54, 0x10, 0x00, 0x12, 0x1a, 0x0a, 0x16, 0x42, 0x4c, 0x4f, 0x43, 0x4b,
	0x5f, 0x53, 0x41, 0x46, 0x45, 0x54, 0x59, 0x5f, 0x46, 0x49, 0x4e, 0x41, 0x4c, 0x49, 0x5a, 0x45,
	0x44, 0x10, 0x01, 0x12, 0x15, 0x0a, 0x11, 0x42, 0x4c, 0x4f, 0x43, 0x4b, 0x5f, 0x53, 0x41, 0x46,
	0x45, 0x54, 0x59, 0x5f, 0x53, 0x41, 0x46, 0x45, 0x10, 0x02, 0x32, 0x90, 0x04, 0x0a, 0x10, 0x4f,
	0x6d, 0x6e, 0x69, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12,
	0x52, 0x0a, 0x0d, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x12, 0x1f, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74,
	0x65, 0x72, 0x4e, 0x65, 0x77, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x20, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x52, 0x65, 0x67, 0x69, 0x73,
	0x74, 0x65, 0x72, 0x4e, 0x65, 0x77, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x49, 0x0a, 0x0f, 0x55, 0x6e, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65,
	0x72, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x1e, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x2e,
	0x55, 0x6e, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x61,
	0x0a, 0x14, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x65, 0x64,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x23, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x2e,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x65, 0x64, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x65, 0x76,
	0x65, 0x6e, 0x74, 0x73, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65,
	0x72, 0x65, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x46, 0x0a, 0x0c, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x73, 0x12, 0x1b, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x53, 0x74, 0x72, 0x65, 0x61,
	0x6d, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x17,
	0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x4f, 0x63, 0x63,
	0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x30, 0x01, 0x12, 0x5e, 0x0a, 0x13, 0x47, 0x65, 0x74,
	0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x69, 0x63, 0x61, 0x6c, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73,
	0x12, 0x22, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x48, 0x69, 0x73,
	0x74, 0x6f, 0x72, 0x69, 0x63, 0x61, 0x6c, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x47, 0x65,
	0x74, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x69, 0x63, 0x61, 0x6c, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x52, 0x0a, 0x13, 0x47, 0x65, 0x74,
	0x4c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x4f, 0x63, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x65,
	0x12, 0x22, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x4c, 0x61, 0x74,
	0x65, 0x73, 0x74, 0x4f, 0x63, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x4f, 0x63, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_omnievent_events_proto_rawDescOnce sync.Once
	file_omnievent_events_proto_rawDescData = file_omnievent_events_proto_rawDesc
)

func file_omnievent_events_proto_rawDescGZIP() []byte {
	file_omnievent_events_proto_rawDescOnce.Do(func() {
		file_omnievent_events_proto_rawDescData = protoimpl.X.CompressGZIP(file_omnievent_events_proto_rawDescData)
	})
	return file_omnievent_events_proto_rawDescData
}

var file_omnievent_events_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_omnievent_events_proto_msgTypes = make([]protoimpl.MessageInfo, 23)
var file_omnievent_events_proto_goTypes = []interface{}{
	(BlockSafety)(0),                     // 0: events.BlockSafety
	(*RegisterNewEventRequest)(nil),      // 1: events.RegisterNewEventRequest
	(*RegisterNewEventResponse)(nil),     // 2: events.RegisterNewEventResponse
	(*UnregisterEventRequest)(nil),       // 3: events.UnregisterEventRequest
	(*ListRegisteredEventsRequest)(nil),  // 4: events.ListRegisteredEventsRequest
	(*ListRegisteredEventsResponse)(nil), // 5: events.ListRegisteredEventsResponse
	(*StreamEventsRequest)(nil),          // 6: events.StreamEventsRequest
	(*GetHistoricalEventsRequest)(nil),   // 7: events.GetHistoricalEventsRequest
	(*GetHistoricalEventsResponse)(nil),  // 8: events.GetHistoricalEventsResponse
	(*GetLatestOccurrenceRequest)(nil),   // 9: events.GetLatestOccurrenceRequest
	(*RegisteredEvent)(nil),              // 10: events.RegisteredEvent
	(*EventOccurrence)(nil),              // 11: events.EventOccurrence
	(*BlockInfo)(nil),                    // 12: events.BlockInfo
	(*EventField)(nil),                   // 13: events.EventField
	(*EventData)(nil),                    // 14: events.EventData
	(*EventOccurrenceFilter)(nil),        // 15: events.EventOccurrenceFilter
	(*BlockFilter)(nil),                  // 16: events.BlockFilter
	(*OccurrenceDataFilter)(nil),         // 17: events.OccurrenceDataFilter
	(*StringDataFilter)(nil),             // 18: events.StringDataFilter
	(*IntDataFilter)(nil),                // 19: events.IntDataFilter
	(*UintDataFilter)(nil),               // 20: events.UintDataFilter
	(*BoolDataFilter)(nil),               // 21: events.BoolDataFilter
	(*BytesDataFilter)(nil),              // 22: events.BytesDataFilter
	(*AddressDataFilter)(nil),            // 23: events.AddressDataFilter
	(*timestamppb.Timestamp)(nil),        // 24: google.protobuf.Timestamp
	(*emptypb.Empty)(nil),                // 25: google.protobuf.Empty
}
var file_omnievent_events_proto_depIdxs = []int32{
	13, // 0: events.RegisterNewEventRequest.fields:type_name -> events.EventField
	0,  // 1: events.RegisterNewEventRequest.block_safety:type_name -> events.BlockSafety
	10, // 2: events.ListRegisteredEventsResponse.events:type_name -> events.RegisteredEvent
	15, // 3: events.GetHistoricalEventsRequest.filter:type_name -> events.EventOccurrenceFilter
	11, // 4: events.GetHistoricalEventsResponse.occurrences:type_name -> events.EventOccurrence
	15, // 5: events.GetLatestOccurrenceRequest.filter:type_name -> events.EventOccurrenceFilter
	13, // 6: events.RegisteredEvent.fields:type_name -> events.EventField
	0,  // 7: events.RegisteredEvent.block_safety:type_name -> events.BlockSafety
	12, // 8: events.EventOccurrence.block_info:type_name -> events.BlockInfo
	14, // 9: events.EventOccurrence.event_data:type_name -> events.EventData
	24, // 10: events.BlockInfo.timestamp:type_name -> google.protobuf.Timestamp
	16, // 11: events.EventOccurrenceFilter.block_filter:type_name -> events.BlockFilter
	17, // 12: events.EventOccurrenceFilter.data_filters:type_name -> events.OccurrenceDataFilter
	18, // 13: events.OccurrenceDataFilter.string:type_name -> events.StringDataFilter
	20, // 14: events.OccurrenceDataFilter.uint:type_name -> events.UintDataFilter
	19, // 15: events.OccurrenceDataFilter.int:type_name -> events.IntDataFilter
	21, // 16: events.OccurrenceDataFilter.bool:type_name -> events.BoolDataFilter
	22, // 17: events.OccurrenceDataFilter.bytes:type_name -> events.BytesDataFilter
	23, // 18: events.OccurrenceDataFilter.address:type_name -> events.AddressDataFilter
	22, // 19: events.OccurrenceDataFilter.abi_bytes:type_name -> events.BytesDataFilter
	1,  // 20: events.OmniEventService.RegisterEvent:input_type -> events.RegisterNewEventRequest
	3,  // 21: events.OmniEventService.UnregisterEvent:input_type -> events.UnregisterEventRequest
	4,  // 22: events.OmniEventService.ListRegisteredEvents:input_type -> events.ListRegisteredEventsRequest
	6,  // 23: events.OmniEventService.StreamEvents:input_type -> events.StreamEventsRequest
	7,  // 24: events.OmniEventService.GetHistoricalEvents:input_type -> events.GetHistoricalEventsRequest
	9,  // 25: events.OmniEventService.GetLatestOccurrence:input_type -> events.GetLatestOccurrenceRequest
	2,  // 26: events.OmniEventService.RegisterEvent:output_type -> events.RegisterNewEventResponse
	25, // 27: events.OmniEventService.UnregisterEvent:output_type -> google.protobuf.Empty
	5,  // 28: events.OmniEventService.ListRegisteredEvents:output_type -> events.ListRegisteredEventsResponse
	11, // 29: events.OmniEventService.StreamEvents:output_type -> events.EventOccurrence
	8,  // 30: events.OmniEventService.GetHistoricalEvents:output_type -> events.GetHistoricalEventsResponse
	11, // 31: events.OmniEventService.GetLatestOccurrence:output_type -> events.EventOccurrence
	26, // [26:32] is the sub-list for method output_type
	20, // [20:26] is the sub-list for method input_type
	20, // [20:20] is the sub-list for extension type_name
	20, // [20:20] is the sub-list for extension extendee
	0,  // [0:20] is the sub-list for field type_name
}

func init() { file_omnievent_events_proto_init() }
func file_omnievent_events_proto_init() {
	if File_omnievent_events_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_omnievent_events_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RegisterNewEventRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_omnievent_events_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RegisterNewEventResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_omnievent_events_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnregisterEventRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_omnievent_events_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListRegisteredEventsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_omnievent_events_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListRegisteredEventsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_omnievent_events_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StreamEventsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_omnievent_events_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetHistoricalEventsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_omnievent_events_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetHistoricalEventsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_omnievent_events_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetLatestOccurrenceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_omnievent_events_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RegisteredEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_omnievent_events_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EventOccurrence); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_omnievent_events_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BlockInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_omnievent_events_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EventField); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_omnievent_events_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EventData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_omnievent_events_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EventOccurrenceFilter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_omnievent_events_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BlockFilter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_omnievent_events_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OccurrenceDataFilter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_omnievent_events_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StringDataFilter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_omnievent_events_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IntDataFilter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_omnievent_events_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UintDataFilter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_omnievent_events_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BoolDataFilter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_omnievent_events_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BytesDataFilter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_omnievent_events_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddressDataFilter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_omnievent_events_proto_msgTypes[10].OneofWrappers = []interface{}{}
	file_omnievent_events_proto_msgTypes[13].OneofWrappers = []interface{}{
		(*EventData_StringValue)(nil),
		(*EventData_IntHexValue)(nil),
		(*EventData_BoolValue)(nil),
		(*EventData_BytesValue)(nil),
		(*EventData_AddressValue)(nil),
		(*EventData_AbiBytes)(nil),
	}
	file_omnievent_events_proto_msgTypes[14].OneofWrappers = []interface{}{}
	file_omnievent_events_proto_msgTypes[15].OneofWrappers = []interface{}{}
	file_omnievent_events_proto_msgTypes[16].OneofWrappers = []interface{}{
		(*OccurrenceDataFilter_String_)(nil),
		(*OccurrenceDataFilter_Uint)(nil),
		(*OccurrenceDataFilter_Int)(nil),
		(*OccurrenceDataFilter_Bool)(nil),
		(*OccurrenceDataFilter_Bytes)(nil),
		(*OccurrenceDataFilter_Address)(nil),
		(*OccurrenceDataFilter_AbiBytes)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_omnievent_events_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   23,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_omnievent_events_proto_goTypes,
		DependencyIndexes: file_omnievent_events_proto_depIdxs,
		EnumInfos:         file_omnievent_events_proto_enumTypes,
		MessageInfos:      file_omnievent_events_proto_msgTypes,
	}.Build()
	File_omnievent_events_proto = out.File
	file_omnievent_events_proto_rawDesc = nil
	file_omnievent_events_proto_goTypes = nil
	file_omnievent_events_proto_depIdxs = nil
}
