name: build-and-push-docker-images
on:
  push:
    branches:
      - "*"
    tags:
      - 'v[0-9]+.[0-9]+.[0-9]+*'
  pull_request:
  workflow_dispatch:
    inputs:
      test_mode:
        description: 'Enable test mode (uses candyland-test registry and draft releases)'
        required: false
        type: boolean
        default: false
      docker_push:
        description: 'Enable docker push'
        required: false
        type: boolean
        default: true
      release_push:
        description: 'Enable release push'
        required: false
        type: boolean
        default: true

env:
  # If test_mode is true, or we're on a branch with a test-build- prefix then use a test registry and a draft release
  TEST_MODE: ${{ github.event.inputs.test_mode == 'true' || startsWith(github.ref, 'refs/heads/test-build-') }}
  DOCKER_REGISTRY: ${{ (github.event.inputs.test_mode == 'true' || startsWith(github.ref, 'refs/heads/test-build-')) && 'europe-west1-docker.pkg.dev/randamu-prod/candyland-test' || 'europe-west1-docker.pkg.dev/randamu-prod/candyland' }}

  SERVICE_ACCOUNT: github@randamu-prod.iam.gserviceaccount.com
  IMAGE_MAINTAINER: "Randamu"
  IMAGE_VENDOR: "Randamu"
  AUTHOR: "Randu Mohammed"

jobs:
  build-binaries:
    uses: ./.github/workflows/build-all-binaries.yml
    secrets: inherit

  generate-matrix:
    needs: build-binaries
    runs-on: ["randamu-self-hosted-default"]
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Download binaries metadata
        uses: actions/download-artifact@v4
        with:
          name: binaries-metadata-${{ github.sha }}
          path: .

      - name: Generate build matrix
        id: set-matrix
        run: |
          CONFIG_FILE=".github/docker-config.json"
          
          # Load config if exists
          if [ -f "$CONFIG_FILE" ]; then
            CONFIG=$(cat "$CONFIG_FILE")
          else
            CONFIG='{}'
          fi
          
          # Generate matrix from binaries.json (slurp to read all objects into array)
          MATRIX=$(jq -sc --argjson config "$CONFIG" 'map({
            binary_name: .name,
            binary_path: .path,
            image_name: ($config[.name].image_name // .name),
            description: ($config[.name].description // "Dcipher service")
          })' binaries.json)
          
          echo "matrix=$MATRIX" >> $GITHUB_OUTPUT
          echo "Generated matrix:"
          echo "$MATRIX" | jq .

      - name: Upload Docker build context
        uses: actions/upload-artifact@v4
        with:
          name: docker-context-${{ github.sha }}
          path: |
            Dockerfile
            .github/docker-config.json
            .dockerignore
          retention-days: 1

  # Note that this dispatch is not necessary at all, it just groups the jobs in the UI, if you want
  # you can move the docker jobs to the main workflow and remove this dispatch
  docker:
    needs: generate-matrix
    strategy:
      fail-fast: false
      matrix:
        app: ${{ fromJson(needs.generate-matrix.outputs.matrix) }}
    uses: ./.github/workflows/build-docker-image.yml
    with:
      binary_name: ${{ matrix.app.binary_name }}
      binary_path: ${{ matrix.app.binary_path }}
      image_name: ${{ matrix.app.image_name }}
      description: ${{ matrix.app.description }}
      docker_registry: ${{ vars.DOCKER_REGISTRY || 'europe-west1-docker.pkg.dev/randamu-prod/candyland' }}
      test_mode: ${{ vars.TEST_MODE || 'false' }}
    secrets:
      GCP_SERVICE_ACCOUNT_TOKEN: ${{ secrets.GCP_SERVICE_ACCOUNT_TOKEN }}
